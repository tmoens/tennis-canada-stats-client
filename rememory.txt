read the README.md

This is where the code lives for now.  Any access requires a user id
and ssh setup on the git server.
ssh://git@tswebwork.com:6022/home/git/tcNodeAdminClient.git

Running the tc_stats_server ==> done in task scheduler out of the directory in which it was built.
By default it will run on port 3002, but you can configure it to run on any port in the
production.env file. For example:
PORT=3003

Configuring apache => make sure you proxy requests to the tc_stats_server to the port on which the
server is running.  This ought to have been done elsewhere, but it is done in the main apache config file.



To make a production build

ng build --base-href=/TCStatsAdminClient/ --configuration=production
Note: when building on the production server in git-bash, it builds the base href
wrong in the dist/index file - so you need to manually fix it.
OR if using git-bash - this seems to work...
ng build --base-href="//TCStatsAdminClient\\" --configuration=production

which will create a directory called TCStatsAdminClient

Deployment
To deploy the production build locally, copy the TCStatsAdminClient directory to
path/to/your/server/TCStatsAdminClient. For a local xampp deployment,
put the TCStatsAdminClient in the htdocs directory under xampp.

TO deploy it on the server - two choices:  1) just copy the TCStatsAdminClient to the appropriate
directory on the server or 2) on the server: git clone, then build and deploy on the server.
I am generally doing 2) so I can tweak the code on the server while I work out the bugs for now.

Generally
1) deploy it locally and test it out
2) deploy to staging on TC server and test it out
3) deploy to production and test it out


